using System;
using UnityEngine;
public class Arrow : MonoBehaviour, IPoolable
{
    Rigidbody _rigidbody;
    IBaseDamage _baseDamage;
    public GameObject GameObject => gameObject;

    private void Awake()
    {
        _rigidbody = GetComponent<Rigidbody>();
    }

    public void SetDamage(int damage, int additionalDamage, DamageType damageType, DamageType additionalDamageType)
    {
        if (additionalDamageType == DamageType.Fire)
        {
            _baseDamage = new DamageFire(new DamageNormal(damage, damageType), additionalDamage, additionalDamageType);
        }
        else if (additionalDamageType == DamageType.Ice)
        {
            _baseDamage = new DamageIce(new DamageNormal(damage, damageType), additionalDamage, additionalDamageType);
        }
        else
        {
            _baseDamage = new DamageNormal(damage, damageType);
        } 
    }

    public event Action<IPoolable> Destroyed;

    private void OnTriggerEnter(Collider other)
    {
        IDamageable damageable = other.GetComponent<IDamageable>();
        if (damageable != null)
        {
            _baseDamage.ApplyDamage(damageable);
        }
        Reset();
    }

    public void Reset()
    {
        Destroyed?.Invoke(this);
    }

    public void FlyInDirection(Vector3 flyInDirection, float speed)
    {
        _rigidbody.velocity = flyInDirection * speed;
    }
}
